# C-b is not acceptable -- Vim uses it
set-option -g prefix C-a
bind-key C-a last-window

set-option -g default-shell /usr/bin/fish
# Start numbering at 1
set -g base-index 1
set-window-option -g pane-base-index 1

set-option -g history-limit 200000

# for neovim
set -g default-terminal "screen-256color"

# Allows for faster key repetition
set -s escape-time 0

# Display tmux messages for 4 seconds
set -g display-time 4000

# Set status bar
set -g status-bg "#a25000"

# Enable focus events so that vim can detect focus
set -g focus-events on

# set -g set-titles on
# set -g set-titles-string "#T"

# Rather than constraining window size to the maximum size of any client 
# connected to the *session*, constrain window size to the maximum size of any 
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on


# Activity monitoring
#setw -g monitor-activity on
#set -g visual-activity on

# Example of using a shell command in the status line
#set -g status-right "#[fg=yellow]#(uptime | cut -d ',' -f 2-)"

# Custom status bar
# Powerline symbols:        
set -g status-left-length 32
set -g status-right-length 150
set -g status-interval 5

set -g status-left '#[fg=#ee7600,bg=#a25000,nobold]'

set -g status-right '#[fg=#f9d5b2] #S #[fg=#ee7600]#[fg=#f9d5b2,bg=#ee7600,noreverse,bold] #(kubectl config current-context | cut -d "_" -f 2)(#(kubectl config current-context | cut -d "_" -f 4 | cut -d "-" -f 1))  #(vpnc-check.sh) #[fg=colour237]#[fg=colour247,bg=colour237] #(date +"%a") %d %b %R #[fg=colour16,bg=colour247,bold] #h '

set -g window-status-format "#[fg=#f9d5b2,bg=#ee7600]   #I #W  #[fg=#a25000, bg=#ee7600]"
set -g window-status-current-format "#[fg=#a25000,bg=#ff9022]#[fg=#ffffff,bg=#ff9022,noreverse,bold] #I  #W #[fg=#ff9022,bg=#a25000,nobold]"

set-option -g allow-rename off

# Session name in status bar
# set-window-option -g status-left " #S "

set-window-option -g mode-keys vi

# if run as "tmux attach", create a session if one does not already exist
# new-session -n $HOST

# Allows us to use C-a a <command> to send commands to a TMUX session inside 
# another TMUX session
bind-key a send-prefix

bind '"' split-window -c "#{pane_current_path}"
bind % split-window -h -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"
bind r source ~/.tmux.conf \; display-message "~/.tmux.conf reloaded"

bind -n C-k clear-history

bind-key -n M-0 select-window -t :=0
bind-key -n M-1 select-window -t :=1
bind-key -n M-2 select-window -t :=2
bind-key -n M-3 select-window -t :=3
bind-key -n M-4 select-window -t :=4
bind-key -n M-5 select-window -t :=5
bind-key -n M-6 select-window -t :=6
bind-key -n M-7 select-window -t :=7
bind-key -n M-8 select-window -t :=8
bind-key -n M-9 select-window -t :=9

set -g mouse on

bind -Tcopy-mode-vi M-y send -X copy-pipe "xsel -b -i" \; display-message "copied to system clipboard"

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-pain-control'

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
